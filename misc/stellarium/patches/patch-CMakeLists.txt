$NetBSD: patch-CMakeLists.txt,v 1.14 2024/12/27 18:19:27 adam Exp $

Do not use ccache.
Do not use application bundle on Darwin.
Do not fetch fast_float.

--- CMakeLists.txt.orig	2024-12-22 10:38:06.000000000 +0000
+++ CMakeLists.txt
@@ -198,7 +198,7 @@ IF(OPENGL_DEBUG_LOGGING)
 ENDIF()
 
 # Use ccache if possible
-IF(NOT WIN32)
+IF(FALSE)
      FIND_PROGRAM(CCACHE_PROGRAM ccache)
      IF(CCACHE_PROGRAM)
           MESSAGE(STATUS "Found ccache ${CCACHE_PROGRAM}")
@@ -252,7 +252,7 @@ IF(${CMAKE_BUILD_TYPE} MATCHES "Fuzzer")
      ENDIF()
 ENDIF()
 
-IF(APPLE)
+IF(FALSE)
      SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
      # share data location:
      SET(SDATALOC "Resources")
@@ -361,7 +361,7 @@ IF("${CMAKE_CXX_COMPILER_ID}" MATCHES "C
           SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-string-plus-int")
 	  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-string-plus-int")
      ENDIF()
-     IF(APPLE)
+     IF(FALSE)
 	  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-common -Wall -Wextra -Wno-unused-parameter -Wno-string-plus-int")
 	  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-common -Wall -Wextra -Wno-unknown-warning-option -Wno-string-plus-int")
      ENDIF()
@@ -851,7 +851,7 @@ ENDIF()
 
 ########### Set some global variables ###########
 IF(UNIX AND NOT WIN32)
-     IF(APPLE)
+     IF(FALSE)
           SET(CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/Stellarium.app/Contents")
      ELSE()
           ADD_DEFINITIONS(-DINSTALL_DATADIR="${CMAKE_INSTALL_PREFIX}/${SDATALOC}")          
@@ -1007,7 +1007,7 @@ IF(GENERATE_PACKAGE_TARGET)
 ENDIF()
 
 ########### macOS Bundling ###############
-IF(APPLE)
+IF(FALSE)
      MESSAGE(STATUS "macOS deployment target: ${CMAKE_OSX_DEPLOYMENT_TARGET} (${CMAKE_OSX_ARCHITECTURES})")
      SET(PACKAGE_OSX_TARGET ${CMAKE_OSX_DEPLOYMENT_TARGET})
      ADD_DEFINITIONS(-DPACKAGE_OSX_TARGET)
@@ -1064,10 +1064,7 @@ ENDIF()
 
 include("cmake/Check-from_chars.cmake")
 IF(NOT FROM_CHARS_WORKS)
-    CPMFindPackage(NAME FastFloat
-                   GIT_REPOSITORY https://github.com/fastfloat/fast_float
-                   VERSION 6.1.0
-                   EXCLUDE_FROM_ALL yes)
+    find_package(FastFloat REQUIRED)
     GET_TARGET_PROPERTY(FastFloat_INCLUDE_DIRECTORIES
                         FastFloat::fast_float INTERFACE_INCLUDE_DIRECTORIES)
     INCLUDE_DIRECTORIES(${FastFloat_INCLUDE_DIRECTORIES})
